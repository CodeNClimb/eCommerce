openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- description: Generated server url
  url: http://localhost:8080
paths:
  /user/register:
    post:
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - user-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /product/{productId}/{username}/review:
    post:
      operationId: reviewProduct
      parameters:
      - explode: false
        in: path
        name: productId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReviewDTO'
          description: OK
      tags:
      - product-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /product/add:
    post:
      operationId: addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
          description: OK
      tags:
      - product-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /category/:
    post:
      operationId: addCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
          description: OK
      summary: Add a new category
      tags:
      - category-controller
      x-content-type: application/json
      x-accepts: '*/*'
  /user/{id}:
    delete:
      operationId: deleteUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                enum:
                - 100 CONTINUE
                - 101 SWITCHING_PROTOCOLS
                - 102 PROCESSING
                - 103 EARLY_HINTS
                - 103 CHECKPOINT
                - 200 OK
                - 201 CREATED
                - 202 ACCEPTED
                - 203 NON_AUTHORITATIVE_INFORMATION
                - 204 NO_CONTENT
                - 205 RESET_CONTENT
                - 206 PARTIAL_CONTENT
                - 207 MULTI_STATUS
                - 208 ALREADY_REPORTED
                - 226 IM_USED
                - 300 MULTIPLE_CHOICES
                - 301 MOVED_PERMANENTLY
                - 302 FOUND
                - 302 MOVED_TEMPORARILY
                - 303 SEE_OTHER
                - 304 NOT_MODIFIED
                - 305 USE_PROXY
                - 307 TEMPORARY_REDIRECT
                - 308 PERMANENT_REDIRECT
                - 400 BAD_REQUEST
                - 401 UNAUTHORIZED
                - 402 PAYMENT_REQUIRED
                - 403 FORBIDDEN
                - 404 NOT_FOUND
                - 405 METHOD_NOT_ALLOWED
                - 406 NOT_ACCEPTABLE
                - 407 PROXY_AUTHENTICATION_REQUIRED
                - 408 REQUEST_TIMEOUT
                - 409 CONFLICT
                - 410 GONE
                - 411 LENGTH_REQUIRED
                - 412 PRECONDITION_FAILED
                - 413 PAYLOAD_TOO_LARGE
                - 413 REQUEST_ENTITY_TOO_LARGE
                - 414 URI_TOO_LONG
                - 414 REQUEST_URI_TOO_LONG
                - 415 UNSUPPORTED_MEDIA_TYPE
                - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                - 417 EXPECTATION_FAILED
                - 418 I_AM_A_TEAPOT
                - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                - 420 METHOD_FAILURE
                - 421 DESTINATION_LOCKED
                - 422 UNPROCESSABLE_ENTITY
                - 423 LOCKED
                - 424 FAILED_DEPENDENCY
                - 425 TOO_EARLY
                - 426 UPGRADE_REQUIRED
                - 428 PRECONDITION_REQUIRED
                - 429 TOO_MANY_REQUESTS
                - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                - 500 INTERNAL_SERVER_ERROR
                - 501 NOT_IMPLEMENTED
                - 502 BAD_GATEWAY
                - 503 SERVICE_UNAVAILABLE
                - 504 GATEWAY_TIMEOUT
                - 505 HTTP_VERSION_NOT_SUPPORTED
                - 506 VARIANT_ALSO_NEGOTIATES
                - 507 INSUFFICIENT_STORAGE
                - 508 LOOP_DETECTED
                - 509 BANDWIDTH_LIMIT_EXCEEDED
                - 510 NOT_EXTENDED
                - 511 NETWORK_AUTHENTICATION_REQUIRED
                type: string
          description: OK
      tags:
      - user-controller
      x-accepts: '*/*'
    get:
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
          description: OK
      tags:
      - user-controller
      x-accepts: '*/*'
  /user/all:
    get:
      operationId: getUsers
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: OK
      tags:
      - user-controller
      x-accepts: '*/*'
  /product/{productId}/reviews/all:
    get:
      operationId: getAllReviews
      parameters:
      - explode: false
        in: path
        name: productId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ReviewDTO'
                type: array
          description: OK
      tags:
      - product-controller
      x-accepts: '*/*'
  /product/{id}:
    delete:
      operationId: deleteProduct
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                enum:
                - 100 CONTINUE
                - 101 SWITCHING_PROTOCOLS
                - 102 PROCESSING
                - 103 EARLY_HINTS
                - 103 CHECKPOINT
                - 200 OK
                - 201 CREATED
                - 202 ACCEPTED
                - 203 NON_AUTHORITATIVE_INFORMATION
                - 204 NO_CONTENT
                - 205 RESET_CONTENT
                - 206 PARTIAL_CONTENT
                - 207 MULTI_STATUS
                - 208 ALREADY_REPORTED
                - 226 IM_USED
                - 300 MULTIPLE_CHOICES
                - 301 MOVED_PERMANENTLY
                - 302 FOUND
                - 302 MOVED_TEMPORARILY
                - 303 SEE_OTHER
                - 304 NOT_MODIFIED
                - 305 USE_PROXY
                - 307 TEMPORARY_REDIRECT
                - 308 PERMANENT_REDIRECT
                - 400 BAD_REQUEST
                - 401 UNAUTHORIZED
                - 402 PAYMENT_REQUIRED
                - 403 FORBIDDEN
                - 404 NOT_FOUND
                - 405 METHOD_NOT_ALLOWED
                - 406 NOT_ACCEPTABLE
                - 407 PROXY_AUTHENTICATION_REQUIRED
                - 408 REQUEST_TIMEOUT
                - 409 CONFLICT
                - 410 GONE
                - 411 LENGTH_REQUIRED
                - 412 PRECONDITION_FAILED
                - 413 PAYLOAD_TOO_LARGE
                - 413 REQUEST_ENTITY_TOO_LARGE
                - 414 URI_TOO_LONG
                - 414 REQUEST_URI_TOO_LONG
                - 415 UNSUPPORTED_MEDIA_TYPE
                - 416 REQUESTED_RANGE_NOT_SATISFIABLE
                - 417 EXPECTATION_FAILED
                - 418 I_AM_A_TEAPOT
                - 419 INSUFFICIENT_SPACE_ON_RESOURCE
                - 420 METHOD_FAILURE
                - 421 DESTINATION_LOCKED
                - 422 UNPROCESSABLE_ENTITY
                - 423 LOCKED
                - 424 FAILED_DEPENDENCY
                - 425 TOO_EARLY
                - 426 UPGRADE_REQUIRED
                - 428 PRECONDITION_REQUIRED
                - 429 TOO_MANY_REQUESTS
                - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
                - 451 UNAVAILABLE_FOR_LEGAL_REASONS
                - 500 INTERNAL_SERVER_ERROR
                - 501 NOT_IMPLEMENTED
                - 502 BAD_GATEWAY
                - 503 SERVICE_UNAVAILABLE
                - 504 GATEWAY_TIMEOUT
                - 505 HTTP_VERSION_NOT_SUPPORTED
                - 506 VARIANT_ALSO_NEGOTIATES
                - 507 INSUFFICIENT_STORAGE
                - 508 LOOP_DETECTED
                - 509 BANDWIDTH_LIMIT_EXCEEDED
                - 510 NOT_EXTENDED
                - 511 NETWORK_AUTHENTICATION_REQUIRED
                type: string
          description: OK
      tags:
      - product-controller
      x-accepts: '*/*'
    get:
      operationId: getProduct
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
          description: OK
      tags:
      - product-controller
      x-accepts: '*/*'
  /product/all:
    get:
      operationId: getAllProducts
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Product'
                type: array
          description: OK
      tags:
      - product-controller
      x-accepts: '*/*'
  /category/{id}:
    delete:
      operationId: deleteCategory
      parameters:
      - description: ID of the category to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      summary: Delete a category by ID
      tags:
      - category-controller
      x-accepts: '*/*'
    get:
      operationId: getCategory
      parameters:
      - description: ID of the category to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
          description: OK
      summary: Get a category by ID
      tags:
      - category-controller
      x-accepts: '*/*'
  /category/all:
    get:
      operationId: getAllCategories
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
                uniqueItems: true
          description: OK
      summary: Get all categories
      tags:
      - category-controller
      x-accepts: '*/*'
components:
  schemas:
    User:
      example:
        firstName: firstName
        lastName: lastName
        password: password
        address: address
        id: 0
        username: username
      properties:
        id:
          format: int32
          type: integer
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
          writeOnly: true
        address:
          type: string
      required:
      - address
      - firstName
      - lastName
      - password
      - username
      type: object
    Review:
      example:
        rating: 6
        id: 0
        text: text
        title: title
      properties:
        id:
          format: int32
          type: integer
        title:
          type: string
        text:
          type: string
        rating:
          format: int32
          type: integer
      type: object
    ReviewDTO:
      example:
        id: 0
        text: text
        reviewer: reviewer
        title: title
      properties:
        id:
          format: int32
          type: integer
        title:
          type: string
        text:
          type: string
        reviewer:
          type: string
      type: object
    Category:
      description: Category object to add
      example:
        description: description
        id: 1
        title: title
      properties:
        id:
          format: int32
          type: integer
        title:
          type: string
        description:
          type: string
      type: object
    Product:
      example:
        image: image
        reviews:
        - rating: 6
          id: 0
          text: text
          title: title
        - rating: 6
          id: 0
          text: text
          title: title
        price: 6.027456183070403
        name: name
        description: description
        id: 0
        category:
          description: description
          id: 1
          title: title
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        description:
          type: string
        image:
          type: string
        price:
          type: number
        reviews:
          items:
            $ref: '#/components/schemas/Review'
          type: array
          uniqueItems: true
        category:
          $ref: '#/components/schemas/Category'
      required:
      - price
      type: object
    UserDTO:
      example:
        firstName: firstName
        address: address
        lasName: lasName
      properties:
        firstName:
          type: string
        lasName:
          type: string
        address:
          type: string
      type: object

